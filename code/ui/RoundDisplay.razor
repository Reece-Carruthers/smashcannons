@using System;
@using Sandbox;
@using Sandbox.UI;

@attribute [StyleSheet( "RoundDisplay.razor.scss" )]
@inherits Panel

@{
	if((StateSystem.Active as EndState).IsValid())
	{
		return;
	}

	//different team colour
	var localPlayer = SmashRunnerMovement.Local;
    var teamClass = localPlayer != null ? GetTeamClass() : "default";
}

<root>
	<div class="container">
		<label class="time @teamClass">@GetTimeLeftString()</label>
	</div>

	<div class="container-status">
		<label class="status @teamClass">@GetRoundName()</label>
	</div>

	<div class="container-alive-runners">
		<label class="alive-runners @teamClass">@AliveName() @GetAliveRunnersCount()</label>
	</div>
</root>

@code
{
	protected override int BuildHash()
	{
		var state = StateSystem.Active as ExtendedState;

		return !state.IsValid() ? 0 : HashCode.Combine( GetTimeLeftString(), GetAliveRunnersCount(), AliveName(), GetTeamClass);
	}

	private string AliveName()
	{
		var state =  StateSystem.Active as LobbyState;

		return state.IsValid() ? "Players:" : "Runners Alive:";
	} 

	private string GetTimeLeftString()
	{
		var state = StateSystem.Active;
		if ( !state.IsValid() ) return string.Empty;

		var timeLeft = MathF.Max( state.TimeLeft, 0 );
		var t = TimeSpan.FromSeconds( timeLeft );
		return $"{t.Minutes}:{t.Seconds:D2}";
	}

	private string GetRoundName()
	{
		var state = StateSystem.Active;
		return !state.IsValid() ? string.Empty : state.Name;
	}

	private List<SmashRunnerMovement> FetchAliveRunnerPlayers()
	{
		var state = StateSystem.Active as ExtendedState;

		if ( state.IsValid() )
		{
			return state.ActiveRunnerPlayers;
		}

		return state.IsValid() ? state.ActiveRunnerPlayers : new List<SmashRunnerMovement>();
	}
	
	private int GetAliveRunnersCount()
	{
		return FetchAliveRunnerPlayers().Count;
	}

	private string GetTeamClass()
    {
        var localPlayer = SmashRunnerMovement.Local;
        if (localPlayer != null)
        {
            // Adjust these checks based on how TeamCategory is implemented
            if (localPlayer.TeamCategory is RunnerTeam)
            {
                return "runners";
            }
            else if (localPlayer.TeamCategory is SmashTeam)
            {
                return "smashers";
            }
        }
        return "default";
    }
}

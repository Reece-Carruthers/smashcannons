@using System;
@using Sandbox;
@using Sandbox.UI;

@attribute [StyleSheet( "RoundDisplay.razor.scss" )]
@inherits Panel

<root>
	<div class="container">
		<label class="time">@GetTimeLeftString()</label>
	</div>
	
	<div class="container-status">
		<label class="status">@GetRoundName()</label>
	</div>

	<div class="container-alive-runners">
        <label class="alive-runners">Runners Alive: @GetAliveRunnersCount()</label>
    </div>

	@if (IsCannonWin())
    {
        <div class="container-win">
            <label class="win-message">Cannoniers win!</label>
        </div>
    }
	else if (IsRunnersWin())
    {
        <div class="container-win">
            <label class="win-message">Runners win!</label>
        </div>
    }
</root>

@code
{
	[Property] public string GameLobby = "Waiting for Players . . .";
	public SmashRunnerMovement LocalPlayer { get; set; }
	
	protected override int BuildHash()
	{
		return HashCode.Combine( GetTimeLeftString(), GetAliveRunnersCount());
	}

	private string GetTimeLeftString()
	{
		var state = StateSystem.Active;
		if ( !state.IsValid() ) return string.Empty;
	    
		var timeLeft = MathF.Max( state.TimeLeft, 0 );
		var t = TimeSpan.FromSeconds( timeLeft );
		return $"{t.Minutes}:{t.Seconds:D2}";
	}
	
	private string GetRoundName()
	{
		var state = StateSystem.Active;
		return !state.IsValid() ? string.Empty : state.Name;
		// return LocalPlayer.LifeState == LifeState.Alive ? "Survive!" : "You Are Dead!";
		
	}

	private int GetAliveRunnersCount()
    {
        var aliveRunners = 0;

        foreach (var player in SmashCannon.Players)
        {
            if (player.TeamCategory is RunnerTeam && player.LifeState == LifeState.Alive)
            {
                aliveRunners++;
            }
        }

        return aliveRunners;
    }

	private bool IsCannonWin()
    {
        var state = StateSystem.Active;
        if (state is GameState or FinalState)
        {
            var aliveRunners = Game.ActiveScene.GetAllComponents<SmashRunnerMovement>()
                                               .Count(x => x.TeamCategory is RunnerTeam && x.LifeState == LifeState.Alive);

            return aliveRunners == 0;
        }

        return false;
    }
	
	private bool IsRunnersWin()
    {
        var state = StateSystem.Active;
        if (state is GameState or FinalState)
        {
            var aliveCannoniers = Game.ActiveScene.GetAllComponents<SmashRunnerMovement>()
                                                  .Count(x => x.TeamCategory is not RunnerTeam && x.LifeState == LifeState.Alive);

            return aliveCannoniers == 0;
        }

        return false;
    }
}

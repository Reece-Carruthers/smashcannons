@using System;
@using Sandbox;
@using Sandbox.UI;

@attribute [StyleSheet( "RoundEndDisplay.razor.scss" )]
@inherits Panel

@{
	var state = StateSystem.Active as EndState;

	if ( !state.IsValid() ) return;
}


<root>
	<div class="container-win">
		<label class="win-message">@WhoWon()</label>
	</div>
</root>

@code
{
	
	protected override int BuildHash()
	{
		var state = StateSystem.Active as EndState;
		return !state.IsValid() ? 0 : HashCode.Combine( WhoWon() );
	}

	private List<SmashRunnerMovement> FetchAliveRunnerPlayers()
	{
		return (StateSystem.Active as EndState)?.ActiveRunnerPlayers ?? new List<SmashRunnerMovement>();
	}

	private List<SmashRunnerMovement> FetchAliveCannonPlayers()
	{
		return (StateSystem.Active as EndState)?.ActiveCannonPlayers ?? new List<SmashRunnerMovement>();
	}

	private bool IsCannonWin()
	{
		var state = StateSystem.Active as EndState;
		if ( !state.IsValid() ) return false;
		var aliveRunners = FetchAliveRunnerPlayers().Count;

		return aliveRunners == 0;
	}

	private bool IsRunnersWin()
	{
		var state = StateSystem.Active as EndState;
		if ( !state.IsValid() ) return false;
		var aliveCannoniers = FetchAliveCannonPlayers().Count;

		return aliveCannoniers == 0;
	}

	private string WhoWon()
	{
		if ( IsCannonWin() )
		{
			return "Cannoniers win!";
		}

		if ( IsRunnersWin() )
		{
			return "Runners win!";
		}

		return "It's a draw!";
	}
}
